....
 ------Setting Up the Environment and Data
-----Create a Virtual Environment
python3 -m venv drug-detection-env
source drug-detection-env/bin/activate
-------Install Required Libraries
pip install tensorflow torch opencv-python geopandas rasterio numpy scikit-learn fastapi uvicorn pillow
-------Prepare the Dataset
------Model Training
import numpy as np
from sklearn.model_selection import train_test_split
import tensorflow as tf
from tensorflow.keras import layers, models

# Define and compile the model
def create_model(input_shape=(256, 256, 3)):
    model = models.Sequential([
        layers.Conv2D(32, (3, 3), activation='relu', input_shape=input_shape),
        layers.MaxPooling2D((2, 2)),
        layers.Conv2D(64, (3, 3), activation='relu'),
        layers.MaxPooling2D((2, 2)),
        layers.Flatten(),
        layers.Dense(128, activation='relu'),
        layers.Dense(1, activation='sigmoid')  # Binary classification
    ])
    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
    return model

# Load data (implement data loading/preprocessing logic here)
X_train, X_test, y_train, y_test = train_test_split(...)

# Train the model
model = create_model()
model.fit(X_train, y_train, epochs=10, batch_size=32, validation_data=(X_test, y_test))

#Save the model
model.save("drug_detection_model.h5")
------
bash
python train_model.py
---------Building the FastAPI Server for Inference
1.-------Create the FastAPI App

  from fastapi import FastAPI, UploadFile, File
from tensorflow.keras.models import load_model
from PIL import Image
import numpy as np

app = FastAPI()
model = load_model("drug_detection_model.h5")

def preprocess_image(image: Image.Image):
    image = image.resize((256, 256))
    image = np.array(image) / 255.0
    return np.expand_dims(image, axis=0)

@app.post("/analyze/")
async def analyze_image(file: UploadFile = File(...)):
    image = Image.open(file.file)
    preprocessed_image = preprocess_image(image)
    prediction = model.predict(preprocessed_image)[0][0]
    result = "Illegal Production Site Detected" if prediction > 0.5 else "No Illegal Activity Detected"
    return {"result": result}

---------Deploying on a Cloud Platform (AWS EC2) 
-------Set Up an EC2 Instance
Go to the AWS Management Console and launch an EC2 instance.
Choose an instance type (e.g., t2.medium or g4dn.xlarge if you need a GPU).
Configure security group rules to allow HTTP (port 80) and SSH (port 22) access.
SSH into your instance after launching it.
  ---------Install Required Software on EC2
  sudo apt update
sudo apt install -y python3-pip git
--------Clone Your Project and Install Dependencies
  git clone https://github.com/your-repo-url.git
cd your-repo-directory
pip3 install -r requirements.txt

  --------Start FastAPI with a Production Server (e.g., Uvicorn + Nginx)
  sudo uvicorn app:app --host 0.0.0.0 --port 80
--------Testing the Deployment
  curl -X POST "http://your-ec2-public-ip/analyze/" -F "file=@path_to_image.jpg"




